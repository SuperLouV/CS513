source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages('clue')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(training)
#check Kth cluster
conf_mat<-table(kmeans_2$cluster,data[,2])
#check Kth cluster
conf_mat<-table(k_mean$cluster,data[,2])
table(k_mean$cluster,training[,'diagnosis'])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Kmean_table
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(h_cluster)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
View(data)
source('~/.active-rstudio-document')
View(data)
View(data)
source('~/.active-rstudio-document')
head(data)
source('~/RStudioProjects/CS513HW05.R')
View(data)
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW08.R')
source('~/RStudioProjects/CS513HW08.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pred[["net.result"]]
pred[["net.result"]]
data
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(training)
source('~/.active-rstudio-document')
View(data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(test)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW07.R')
source('~/RStudioProjects/CS513HW07.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# The traing wrong rate is
OutputVsPred_train
# test the model by test dataset
new.output = compute(nn, covariate = matrix(as.matrix(test[,-10]), byrow = TRUE, ncol = 12))
training$score
View(table_new)
View(table_shuffle)
nn$net.result[[1]]
nn$net.result
nn$net.result[[1]]
misClassificationError_train
OutputVsPred_train = cbind(training$score,nn)
OutputVsPred_train = cbind(training$score,nn[1])
# The traing wrong rate is
OutputVsPred_train
A=as.numeric(k)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
ANN$net.result
#plot(ANN)
k=ANN$result.matrix
k
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
training<-data[idx,]
test<-data[-idx,]
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
k=ANN$result.matrix
k
source('~/RStudioProjects/FinalProject/annDimonds.R')
plot(ANN)
p=ANN$net.result
source('~/RStudioProjects/FinalProject/annDimonds.R')
k=ANN$result.matrix
source('~/RStudioProjects/FinalProject/annDimonds.R')
p=ANN$net.result
p
ANN_diagnosis<-c('three','four','five','six','seven','eight','nine')[apply(pred$net.result,1,which.max)]
#A=as.numeric(ANN$net.result)
pred<-compute(ANN ,test[,-12])
ANN_diagnosis<-c('three','four','five','six','seven','eight','nine')[apply(pred$net.result,1,which.max)]
ANN_diagnosis
accuracy= (test$quality==ANN_diagnosis)
accuracy
ANN_diagnosis
pred$net.result
accuracy
acc<-sum(accuracy)/length(accuracy)
print(paste("the accuracy is",acc))
accuracy
acc<-sum(accuracy)/length(accuracy)
print(paste("the accuracy is",acc))
ANN_diagnosis
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
test$quality
test$quality
View(test)
for(i in test$quality){
print(i)
}
print(length(test$quality))
#A=as.numeric(ANN$net.result)
pred<-compute(ANN ,test[,-12])
pred
print(length(pred))
print(length(pred[1]))
print(length(pred[2]))
print(pred)
for(i in pred){
print(i)
}
pred$net.result[[1]]
ANN$weights
View(test)
source('~/RStudioProjects/FinalProject/annDimonds.R')
ANN_diagnosis
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
ANN_diagnosis
source('~/RStudioProjects/FinalProject/annDimonds.R')
length(accuracy)
sum(accuracy)
View(test)
gwplot(ANN, selected.covariate="fixed.acidity")
gwplot(ANN, selected.covariate="residual.sugar")
gwplot(ANN, selected.covariate="pH")
gwplot(ANN, selected.covariate="alcohol")
predict.table<-table(data$quality,ANN_diagnosis)
predict.table<-table(data$quality,ANN_diagnosis)
ANN_diagnosis
apply(pred$net.result,1,which.max)
print(pred)
gwplot(ANN, selected.covariate="density")
gwplot(ANN, selected.covariate="chlorides")
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
ANN_diagnosis
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
#  clean NA datas
# The predictor vars must be scaled data for the ANN fitting
scale(data)
#  clean NA datas
# The predictor vars must be scaled data for the ANN fitting
as.numeric(data)
#  clean NA datas
# The predictor vars must be scaled data for the ANN fitting
as.numeric(data)
#data$type <- as.numeric(data$type, levels = c("white", "red"), labels = c("1","2"))
min.quality=min(data$quality)
max.quality=max(data$quality)
min.quality
max.quality
# response var must be scaled to [0 < resp < 1]
data$quality <- scale(data$quality
, center = min.quality
, scale = max.quality- min.quality)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
？garson()
?garson()
install.packages("garson")
# works fine on single hidden layer model
garson(ANN)
install.packages('NeuralNetTools')
source('~/RStudioProjects/FinalProject/annDimonds.R')
# works fine on single hidden layer model
garson(ANN)
source('~/RStudioProjects/FinalProject/annDimonds.R')
# evaluation of variable importance
garson(ANN)
source('~/RStudioProjects/FinalProject/annDimonds.R')
pred
View(p)
View(test)
View(data)
View(training)
ANN_diagnosis
print(pred)
#plot(ANN)
k=ANN$result.matrix
p=ANN$net.result
ANN$weights
plot(ANN)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
plot(ANN)
length(pred)
length(test)
length(data)
length(test)
data_origonal=data
View(data_origonal)
length(data_origonal)
p
k
p
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
p
k
# evaluation of variable importance
garson(ANN)
# evaluation of variable importance
garson(ANN)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
max
min
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
p
pred
length(test)
head(pred)
l=max(pred)
m=min(pred)
l=max(pred,1)
l=max(pred,2)
for(k in pred){
print(k)
}
for(k in pred){
print(k)
}
#ANN_diagnosis<-c('three','four','five','six','seven','eight','nine')[apply(pred$net.result,1,which.max)]
ANN_diagnosis<-c('3','4','5','6','7','8','9')[apply(pred$net.result,1,which.max)]
ANN_diagnosis
#A=as.numeric(ANN$net.result)
pred<-compute(ANN ,test[,-12])
pred
View(test)
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
length(test)
pred
length(pred)
length(pred[1])
length(pred[[1]])
pred$net.result
length(pred$net.result)
View(test)
max(g)
max(pred$net.result)
min(pred$net.result)
p
max(k)
max(p)
max(ANN$net.result)
min(pred$net.result)
p=ANN$net.result
p
plot(data$quality, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
plot(data$quality, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
source('~/RStudioProjects/FinalProject/annDimonds.R')
g=pred$net.result
max(pred$net.result)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
plot(data[,12], pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
plot(test, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
plot(test$type, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
plot(test[,12], pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
test
plot(test["quality"], pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
max(pred$net.result)
min(pred$net.result)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
min(pred$net.result)
max(pred$net.result)
plot(test["quality"], pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
# response var must be scaled to [0 < resp < 1]
scaled<- as.data.frame(scale(data, center = min, scale = max- min ))
plot(test$quality, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
source('~/RStudioProjects/FinalProject/annDimonds.R')
View(data)
View(data)
View(scaled)
p
k
#A=as.numeric(ANN$net.result)
pred<-compute(ANN ,testNN[,-12])
pred=(pred$net.result * (max(data$quality) - min(data$quality))) + min(data$quality)
View(test)
pred
View(test)
plot(test$quality, pred, col='blue', pch=16, ylab = "predicted rating NN", xlab = "real rating")
# Calculate Root Mean Square Error (RMSE)
RMSE.NN = (sum((test$quality - pred)^2) / nrow(test)) ^ 0.5
RMSE.NN
print(paste("the Root Mean Square Error is",RMSE.NN))
source('~/RStudioProjects/FinalProject/annDimonds.R')
function(x){
print(1)
}
toInt(6)
pred
source('~/RStudioProjects/FinalProject/annDimonds.R')
pred
for(i in pred){
print(i+100)
}
toInt()
for (i in pred) {
i=round(i)
}
pred
pred[i]
pred[1]
pred[2]
pred[3]
for (i in length(pred)) {
print(i)
}
for (i in 1: length(pred)) {
print(i)
}
for (i in 1: length(pred)) {
print(i)
pred[i]=round(pred[i])
}
pred[3]
accuracy= (test$quality==pred)
acc<-sum(accuracy)/length(accuracy)
print(paste("the accuracy is",acc))
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
# evaluation of variable importance
garson(ANN)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
## ANN
ANN<- neuralnet(quality~fixed.acidity+volatile.acidity+citric.acid+residual.sugar+chlorides+free.sulfur.dioxide+total.sulfur.dioxide+density+pH+sulphates+alcohol,data=trainNN,hidden=c(4,2), threshold=0.001,act.fct = "logistic", linear.output = FALSE)
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
source('~/RStudioProjects/FinalProject/annDimonds.R')
